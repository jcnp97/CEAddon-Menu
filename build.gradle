plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.3.1"
    id("com.gradleup.shadow") version "8.3.3"
}

group = 'asia.virtualmc'
version = '1.1.1'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "commandapi"
        url = "https://repo.codemc.org/repository/maven-public/"
    }
    maven {
        name = "jitpack.io"
        url = "https://jitpack.io"
    }
    maven {
        name = "craft-engine"
        url = "https://repo.momirealms.net/releases/"
    }
    maven {
        name = "placeholder-api"
        url = "https://repo.extendedclip.com/releases/"
    }
    maven {
        name = "libby"
        url = "https://repo.alessiodp.com/releases/"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.21.10-R0.1-SNAPSHOT"
    compileOnly "net.momirealms:craft-engine-core:0.0.63"
    compileOnly "net.momirealms:craft-engine-bukkit:0.0.63"
    compileOnly "me.clip:placeholderapi:2.11.6"

    //implementation "dev.jorel:commandapi-bukkit-shade:10.1.2"
    implementation "net.byteflux:libby-bukkit:1.3.1"
    implementation "dev.jorel:commandapi-paper-shade:11.0.0"
    compileOnly "com.github.stefvanschie.inventoryframework:IF:0.11.3"
    compileOnly "dev.dejvokep:boosted-yaml:1.3.6"
}

tasks {
    runServer {
        minecraftVersion("1.21")
    }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks.shadowJar {
    archiveClassifier.set('')
    relocate "net.byteflux.libby", "asia.virtualmc.CEAddonMenu.libs.libby"
    relocate "dev.jorel.commandapi", "asia.virtualmc.CEAddonMenu.libs.commandapi"

    manifest {
        attributes["paperweight-mappings-namespace"] = "mojang"
    }
    //relocate "com.github.stefvanschie.inventoryframework", "asia.virtualmc.CEAddonMenu.libs.inventoryframework"
    //relocate "dev.dejvokep.boostedyaml", "asia.virtualmc.CEAddonMenu.libs.boostedyaml"
}

tasks.build {
    dependsOn tasks.shadowJar
}